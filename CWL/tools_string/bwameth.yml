#!/usr/bin/env cwl-runner
cwlVersion: "cwl:draft-3"
id: '#bwameth'
label: bwameth
class: CommandLineTool

requirements:
  - class: ShellCommandRequirement

hints:
  - class: ResourceRequirement
    coresMin: 1
    ramMin: 28000
#    outdirMin: 512000
#    description: "the process requires at least 15G of RAM"
    

inputs:
- id: "file_dir"
  type: string
  #inputBinding:
  #  position: 1
- id: '#threads'
  type:
  - 'null'
  - int
  label: ''
  description: ''
  #streamable: false
  inputBinding:
    position: 101
    prefix: --threads
    separate: true
  #required: false
#- id: '#reference'
#  type:
#  - File
#  label: ''
#  description: the reference fasta file
#  secondaryFiles:
#    - .bwameth.c2t
#    - .bwameth.c2t.amb
#    - .bwameth.c2t.ann
#    - .bwameth.c2t.bwt
#    - .bwameth.c2t.pac
#    - .bwameth.c2t.sa
#  inputBinding:
#    position: 2
#    prefix: --reference
#    separate: true

- id: '#reference'
  type: File
  label: ''
  description: the reference fasta file location
  inputBinding:
    position: 102
    prefix: --reference
    separate: true
    
- id: '#lib_type'
  type: string
  description: |
    Library type, directional or non-directional    

- id: '#read1'
  type:
  - string
  label: ''
  description: the input fastq file with the first mate
  inputBinding:
    position: 103
    separate: true
- id: '#read2'
  type:
  - string
  label: ''
  description: the input fastq file with the second mate
  #streamable: false
  inputBinding:
    position: 104
    separate: true
  #required: false
- id: '#alignment_filename'
  type: string
  
outputs:
- id: '#alignment'
  type: string
  #streamable: true
  outputBinding:
   outputEval: ${return inputs.file_dir + "/" + inputs['alignment_filename'] + ".sam";}
#- id: '#alignment_stderr'
#  type: File
#  outputBinding:
#   glob: $(inputs['alignment_filename']).log

baseCommand: cd
arguments:
- valueFrom: $(inputs.file_dir)
  position: 1
- valueFrom: ";"
  position: 2
- valueFrom: "bwameth.py"
  position: 100
- valueFrom: ${
      if(inputs.lib_type=="directional"){
        return null;
      }else{
        return "--non-directional";
      }
    }
  position: 200
- valueFrom: ">"
  position: 1001
- valueFrom: $(inputs.file_dir + "/" + inputs['alignment_filename']).sam
  position: 1002

#stdout: $(inputs.file_dir + "/" + inputs['alignment_filename']).sam
#stderr: $(inputs['alignment_filename']).log
